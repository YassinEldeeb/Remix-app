{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "/Users/mahmoud/Desktop/TaskOS/app/root.tsx", "../app/components/layout/navbar.tsx", "../app/utils/index.ts", "../app/utils/session.server.ts", "../app/models/user.server.ts", "../app/utils/db.server.ts", "/Users/mahmoud/Desktop/TaskOS/app/routes/settings.two-factor-authentication.tsx", "../app/utils/workos.server.ts", "../app/components/mfa/setup/select-factor.tsx", "../app/components/shared/loader.tsx", "../app/components/mfa/setup/verify.tsx", "../app/components/mfa/setup/activated.tsx", "../app/components/shared/warning.tsx", "/Users/mahmoud/Desktop/TaskOS/app/routes/settings.tsx", "/Users/mahmoud/Desktop/TaskOS/app/routes/logout.tsx", "/Users/mahmoud/Desktop/TaskOS/app/routes/signup.tsx", "/Users/mahmoud/Desktop/TaskOS/app/routes/index.tsx", "/Users/mahmoud/Desktop/TaskOS/app/routes/login.tsx", "../app/components/login-form.tsx", "../app/components/mfa/totp-form.tsx", "../app/components/mfa/sms-form.tsx", "../app/components/mfa/form-switcher.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import type {\n  LinksFunction,\n  LoaderFunction,\n  MetaFunction,\n} from '@remix-run/node';\nimport { json } from '@remix-run/node';\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from '@remix-run/react';\nimport { Toaster } from 'react-hot-toast';\nimport { Navbar } from './components/layout/navbar';\nimport styles from './styles/app.css';\nimport { getUser } from './utils/session.server';\n\nexport const links: LinksFunction = () => {\n  return [{ rel: 'stylesheet', href: styles }];\n};\n\nexport const meta: MetaFunction = () => ({\n  charset: 'utf-8',\n  title: 'WorkOS + Remix',\n  viewport: 'width=device-width,initial-scale=1',\n});\n\ntype LoaderData = {\n  user: Awaited<ReturnType<typeof getUser>>;\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  return json<LoaderData>({\n    user: await getUser(request),\n  });\n};\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <div>\n          <Navbar />\n          <main className=\"p-6 max-w-2xl mx-auto\">\n            <Toaster />\n            <Outlet />\n          </main>\n        </div>\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "import { Fragment } from 'react';\nimport { Disclosure, Menu, Transition } from '@headlessui/react';\nimport { Form, Link } from '@remix-run/react';\nimport { useOptionalUser } from '~/utils';\nimport {\n  Cross2Icon,\n  HamburgerMenuIcon,\n  PersonIcon,\n} from '@radix-ui/react-icons';\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ');\n}\n\nexport function Navbar() {\n  const user = useOptionalUser();\n  return (\n    <Disclosure as=\"nav\" className=\"bg-white shadow\">\n      {({ open }) => (\n        <>\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"flex justify-between h-16\">\n              <div className=\"flex\">\n                <div className=\"-ml-2 mr-2 flex items-center md:hidden\">\n                  {/* Mobile menu button */}\n                  {user && (\n                    <Disclosure.Button className=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\">\n                      <span className=\"sr-only\">Open main menu</span>\n                      {open ? (\n                        <Cross2Icon\n                          className=\"block h-6 w-6\"\n                          aria-hidden=\"true\"\n                        />\n                      ) : (\n                        <HamburgerMenuIcon\n                          className=\"block h-6 w-6\"\n                          aria-hidden=\"true\"\n                        />\n                      )}\n                    </Disclosure.Button>\n                  )}\n                </div>\n                <div className=\"flex-shrink-0 font-medium text-lg flex items-center\">\n                  <Link to=\"/\">WorkOS + Remix</Link>\n                </div>\n              </div>\n              {user && (\n                <div className=\"flex items-center\">\n                  <div className=\"hidden md:ml-4 md:flex-shrink-0 md:flex md:items-center\">\n                    {/* Profile dropdown */}\n                    <Menu as=\"div\" className=\"ml-3 relative\">\n                      <div>\n                        <Menu.Button className=\"bg-white rounded-full flex text-sm focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                          <span className=\"sr-only\">Open user menu</span>\n                          <PersonIcon className=\"h-7 w-7 text-white bg-indigo-500 p-1.5 rounded-full\" />\n                        </Menu.Button>\n                      </div>\n                      <Transition\n                        as={Fragment}\n                        enter=\"transition ease-out duration-200\"\n                        enterFrom=\"transform opacity-0 scale-95\"\n                        enterTo=\"transform opacity-100 scale-100\"\n                        leave=\"transition ease-in duration-75\"\n                        leaveFrom=\"transform opacity-100 scale-100\"\n                        leaveTo=\"transform opacity-0 scale-95\"\n                      >\n                        <Menu.Items className=\"origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\">\n                          <Menu.Item>\n                            <p className=\"block px-4 py-2 mb-3 text-xs text-gray-700 border-b-2 border-gray-200\">\n                              {user?.email}\n                            </p>\n                          </Menu.Item>\n                          <Menu.Item>\n                            {({ active }) => (\n                              <Link\n                                to=\"/settings\"\n                                className={classNames(\n                                  active ? 'bg-gray-100' : '',\n                                  'hover:bg-gray-100 block px-4 py-2 text-sm text-gray-700'\n                                )}\n                              >\n                                Settings\n                              </Link>\n                            )}\n                          </Menu.Item>\n                          <Menu.Item>\n                            {({ active }) => (\n                              <Form action=\"/logout\" method=\"post\">\n                                <button\n                                  type=\"submit\"\n                                  className=\"hover:bg-gray-100 w-full text-left block px-4 py-2 text-sm text-gray-700\"\n                                >\n                                  Logout\n                                </button>\n                              </Form>\n                            )}\n                          </Menu.Item>\n                        </Menu.Items>\n                      </Transition>\n                    </Menu>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n          {user && (\n            <Disclosure.Panel className=\"md:hidden\">\n              <div className=\"pt-4 pb-3 border-t border-gray-200\">\n                <div className=\"flex items-center px-4 sm:px-6\">\n                  <div className=\"flex-shrink-0\">\n                    <PersonIcon className=\"h-7 w-7 text-white  bg-indigo-500 p-1.5 rounded-full\" />\n                  </div>\n                  <div className=\"ml-3\">\n                    <div className=\"text-sm font-medium text-gray-500\">\n                      {user?.email}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"mt-3 space-y-1\">\n                  <Disclosure.Button\n                    as=\"a\"\n                    href=\"/settings\"\n                    className=\"block px-4 py-2 text-base font-medium text-gray-500 hover:text-gray-800 hover:bg-gray-100 sm:px-6\"\n                  >\n                    Settings\n                  </Disclosure.Button>\n                  <Disclosure.Button\n                    as=\"a\"\n                    href=\"/logout\"\n                    className=\"block px-4 py-2 text-base font-medium text-gray-500 hover:text-gray-800 hover:bg-gray-100 sm:px-6\"\n                  >\n                    Log out\n                  </Disclosure.Button>\n                </div>\n              </div>\n            </Disclosure.Panel>\n          )}\n        </>\n      )}\n    </Disclosure>\n  );\n}\n", "import { useMatches } from \"@remix-run/react\";\nimport { useMemo } from \"react\";\n\nimport type { User } from \"~/models/user.server\";\n\nconst DEFAULT_REDIRECT = \"/\";\n\n/**\n * This should be used any time the redirect path is user-provided\n * (Like the query string on our login/signup pages). This avoids\n * open-redirect vulnerabilities.\n * @param {string} to The redirect destination\n * @param {string} defaultRedirect The redirect to use if the to is unsafe.\n */\nexport function safeRedirect(\n  to: FormDataEntryValue | string | null | undefined,\n  defaultRedirect: string = DEFAULT_REDIRECT\n) {\n  if (!to || typeof to !== \"string\") {\n    return defaultRedirect;\n  }\n\n  if (!to.startsWith(\"/\") || to.startsWith(\"//\")) {\n    return defaultRedirect;\n  }\n\n  return to;\n}\n\n/**\n * This base hook is used in other hooks to quickly search for specific data\n * across all loader data using useMatches.\n * @param {string} id The route id\n * @returns {JSON|undefined} The router data or undefined if not found\n */\nexport function useMatchesData(\n  id: string\n): Record<string, unknown> | undefined {\n  const matchingRoutes = useMatches();\n  const route = useMemo(\n    () => matchingRoutes.find((route) => route.id === id),\n    [matchingRoutes, id]\n  );\n  return route?.data;\n}\n\nfunction isUser(user: any): user is User {\n  return user && typeof user === \"object\" && typeof user.email === \"string\";\n}\n\nexport function useOptionalUser(): User | undefined {\n  const data = useMatchesData(\"root\");\n  if (!data || !isUser(data.user)) {\n    return undefined;\n  }\n  return data.user;\n}\n\nexport function useUser(): User {\n  const maybeUser = useOptionalUser();\n  if (!maybeUser) {\n    throw new Error(\n      \"No user found in root loader, but user is required by useUser. If user is optional, try useOptionalUser instead.\"\n    );\n  }\n  return maybeUser;\n}\n\nexport function validateEmail(email: unknown): email is string {\n  return typeof email === \"string\" && email.length > 3 && email.includes(\"@\");\n}\n", "import { createCookieSessionStorage, redirect } from \"@remix-run/node\";\nimport invariant from \"tiny-invariant\";\nimport type { User } from \"~/models/user.server\";\nimport { getUserById } from \"~/models/user.server\";\n\ninvariant(process.env.SESSION_SECRET, \"SESSION_SECRET must be set\");\n\nexport const sessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: \"__session\",\n    httpOnly: true,\n    maxAge: 0,\n    path: \"/\",\n    sameSite: \"lax\",\n    secrets: [process.env.SESSION_SECRET],\n    secure: process.env.NODE_ENV === \"production\",\n  },\n});\n\nconst USER_SESSION_KEY = \"userId\";\n\nexport async function getSession(request: Request) {\n  const cookie = request.headers.get(\"Cookie\");\n  return sessionStorage.getSession(cookie);\n}\n\nexport async function getUserId(request: Request): Promise<string | undefined> {\n  const session = await getSession(request);\n  const userId = session.get(USER_SESSION_KEY);\n  return userId;\n}\n\nexport async function getUser(request: Request): Promise<null | User> {\n  const userId = await getUserId(request);\n  if (userId === undefined) return null;\n\n  const user = await getUserById(userId);\n  if (user) return user;\n\n  throw await logout(request);\n}\n\nexport async function requireUserId(\n  request: Request,\n  redirectTo: string = new URL(request.url).pathname\n): Promise<string> {\n  const userId = await getUserId(request);\n  if (!userId) {\n    const searchParams = new URLSearchParams([[\"redirectTo\", redirectTo]]);\n    throw redirect(`/login?${searchParams}`);\n  }\n  return userId;\n}\n\nexport async function requireUser(request: Request) {\n  const userId = await requireUserId(request);\n\n  const user = await getUserById(userId);\n  if (user) return user;\n\n  throw await logout(request);\n}\n\nexport async function createUserSession({\n  request,\n  userId,\n  remember,\n  redirectTo,\n}: {\n  request: Request;\n  userId: string;\n  remember: boolean;\n  redirectTo: string;\n}) {\n  const session = await getSession(request);\n  session.set(USER_SESSION_KEY, userId);\n  return redirect(redirectTo, {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.commitSession(session, {\n        maxAge: remember\n          ? 60 * 60 * 24 * 7 // 7 days\n          : undefined,\n      }),\n    },\n  });\n}\n\nexport async function logout(request: Request) {\n  const session = await getSession(request);\n  return redirect(\"/\", {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.destroySession(session),\n    },\n  });\n}\n", "import type { Password, User } from '@prisma/client';\nimport bcrypt from 'bcryptjs';\nimport { prisma } from '~/utils/db.server';\nexport type { User } from '@prisma/client';\n\nexport async function getUserById(id: User['id']) {\n  return prisma.user.findUnique({ where: { id } });\n}\n\nexport async function getUserByEmail(email: User['email']) {\n  return prisma.user.findUnique({ where: { email } });\n}\n\nexport async function getUserAuthFactors(id: User['id']) {\n  return prisma.user.findUnique({\n    where: { id },\n    select: {\n      smsFactorId: true,\n      totpFactorId: true,\n    },\n  });\n}\n\nexport function enrollTotp(userId, totpFactorId) {\n  return prisma.user.update({\n    where: {\n      id: userId,\n    },\n    data: {\n      totpFactorId,\n    },\n  });\n}\n\nexport function enrollSMS(userId, smsFactorId) {\n  return prisma.user.update({\n    where: {\n      id: userId,\n    },\n    data: {\n      smsFactorId,\n    },\n  });\n}\n\nexport async function createUser(email: User['email'], password: string) {\n  const hashedPassword = await bcrypt.hash(password, 10);\n\n  return prisma.user.create({\n    data: {\n      email,\n      password: {\n        create: {\n          hash: hashedPassword,\n        },\n      },\n    },\n  });\n}\n\nexport async function deleteUserByEmail(email: User['email']) {\n  return prisma.user.delete({ where: { email } });\n}\n\nexport async function verifyLogin(\n  email: User['email'],\n  password: Password['hash']\n) {\n  const userWithPassword = await prisma.user.findUnique({\n    where: { email },\n    include: {\n      password: true,\n    },\n  });\n\n  if (!userWithPassword || !userWithPassword.password) {\n    return null;\n  }\n\n  const isValid = await bcrypt.compare(\n    password,\n    userWithPassword.password.hash\n  );\n\n  if (!isValid) {\n    return null;\n  }\n\n  const { password: _password, ...userWithoutPassword } = userWithPassword;\n\n  return userWithoutPassword;\n}\n", "import { PrismaClient } from \"@prisma/client\";\n\nlet prisma: PrismaClient;\n\ndeclare global {\n  var __db__: PrismaClient;\n}\n\n// this is needed because in development we don't want to restart\n// the server with every change, but we want to make sure we don't\n// create a new connection to the DB with every change either.\n// in production we'll have a single connection to the DB.\nif (process.env.NODE_ENV === \"production\") {\n  prisma = new PrismaClient();\n} else {\n  if (!global.__db__) {\n    global.__db__ = new PrismaClient();\n  }\n  prisma = global.__db__;\n  prisma.$connect();\n}\n\nexport { prisma };\n", "import { json } from '@remix-run/node';\nimport type { ActionFunction, LoaderFunction } from '@remix-run/node';\nimport { useActionData, useLoaderData, useTransition } from '@remix-run/react';\nimport {\n  enrollSMS,\n  enrollTotp,\n  getUserAuthFactors,\n} from '~/models/user.server';\nimport { requireUser, requireUserId } from '~/utils/session.server';\nimport { workos } from '~/utils/workos.server';\nimport { SelectFactor } from '~/components/mfa/setup/select-factor';\nimport { Verify } from '~/components/mfa/setup/verify';\nimport { Activated } from '~/components/mfa/setup/activated';\nimport { Warning } from '~/components/shared/warning';\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const userId = await requireUserId(request);\n  const userAuthFactors = await getUserAuthFactors(userId);\n  return userAuthFactors;\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const user = await requireUser(request);\n  let formData = await request.formData();\n  let { _action, ...values } = Object.fromEntries(formData);\n\n  switch (_action) {\n    case 'selectFactor':\n      if (!values.authFactorType) {\n        return json(\n          { errors: { message: 'This field is required' } },\n          { status: 400 }\n        );\n      }\n      if (values.authFactorType === 'totp') {\n        try {\n          const totpFactor = await workos.mfa.enrollFactor({\n            type: 'totp',\n            issuer: user.email,\n            user: user.email,\n          });\n\n          const totpChallenge = await workos.mfa.challengeFactor({\n            authenticationFactorId: totpFactor.id,\n          });\n\n          return { totpFactor, totpChallenge, step: 1 };\n        } catch (error) {\n          return json({ errors: { message: error } }, { status: 400 });\n        }\n      }\n\n      if (values.authFactorType === 'sms') {\n        setTimeout(() => {}, 3000);\n        return { smsFactor: true, step: 1 };\n      }\n\n    case 'phoneNumber':\n      if (!values.phoneNumber) {\n        return json(\n          { errors: { message: 'You need to provide a phone number' } },\n          { status: 400 }\n        );\n      }\n\n      try {\n        const smsFactor = await workos.mfa.enrollFactor({\n          type: 'sms',\n          phoneNumber: `${values.phoneNumber}`,\n        });\n\n        const smsChallenge = await workos.mfa.challengeFactor({\n          authenticationFactorId: smsFactor.id,\n        });\n        return { smsFactor, smsChallenge, step: 1 };\n      } catch (error) {\n        console.log('OOOOPS', error);\n        return json({ errors: { message: error } }, { status: 400 });\n      }\n\n    case 'verify':\n      const {\n        authenticationCode,\n        authenticationChallengeId,\n        isSMSVerification,\n      } = values;\n\n      if (authenticationCode.toString().length !== 6) {\n        return json(\n          { errors: { title: 'Code must be 6 digits' } },\n          { status: 400 }\n        );\n      }\n\n      try {\n        const response = await workos.mfa.verifyFactor({\n          authenticationChallengeId: `${authenticationChallengeId}`,\n          code: `${authenticationCode}`,\n        });\n\n        if (response.valid) {\n          if (isSMSVerification === 'true') {\n            await enrollSMS(\n              user.id,\n              response.challenge.authentication_factor_id\n            );\n          } else {\n            await enrollTotp(\n              user.id,\n              response.challenge.authentication_factor_id\n            );\n          }\n        }\n        return { response, step: 2 };\n      } catch (error) {\n        return json({ errors: { message: error } }, { status: 400 });\n      }\n  }\n  return null;\n};\n\nconst MultiFactorAuthentication = () => {\n  const data = useLoaderData();\n  const actionData = useActionData();\n  const transition = useTransition();\n\n  return (\n    <section className=\"my-10\">\n      {data?.totpFactorId ? (\n        <Warning\n          message=\"Changing your two-factor authentication device will invalidate your\n            current one\"\n        />\n      ) : null}\n      <h1 className=\"text-2xl font\">Set up two-factor authentication (2FA)</h1>\n      <ol className=\"my-8 relative border-l-2 border-gray-200\">\n        <SelectFactor actionData={actionData} transition={transition} />\n        <Verify actionData={actionData} transition={transition} />\n        <Activated actionData={actionData} />\n      </ol>\n    </section>\n  );\n};\n\nexport default MultiFactorAuthentication;\n", "import WorkOS from '@workos-inc/node';\n\nexport const workos = new WorkOS(process.env.WORKOS_API_KEY);\n", "import * as RadioGroup from '@radix-ui/react-radio-group';\nimport { Loader } from '../../shared/loader';\nimport { Form } from '@remix-run/react';\n\nexport const SelectFactor = ({ actionData, transition }) => {\n  return (\n    <div>\n      <li\n        className={` ml-6 ${\n          !actionData?.step ? 'p-5 border-2 border-gray-200 rounded-md' : ''\n        }`}\n      >\n        {actionData?.step >= 1 ? (\n          <div className=\"text-lg font-medium flex items-center\">\n            <span className=\"flex absolute bg-indigo-500 -left-4 justify-center items-center w-7 h-7 rounded-full\">\n              <svg\n                className=\"w-4 h-4 stroke-white\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={4}\n                  d=\"M5 13l4 4L19 7\"\n                />\n              </svg>\n            </span>\n            <h2>Choose an authentication factor</h2>\n          </div>\n        ) : (\n          <>\n            <div className=\"text-lg font-medium flex items-center\">\n              <span className=\"flex absolute top-0 -left-4 justify-center items-center w-5 p-3.5 h-5 bg-indigo-500  rounded-full ring-8 ring-white text-base font-medium text-white\">\n                1\n              </span>\n              <h2>Choose an authentication factor</h2>\n            </div>\n            <p className=\"mb-5 mt-3\">\n              Two-factor authentication (2FA) is an extra layer of security used\n              when logging into websites or apps.\n            </p>\n            <Form method=\"post\" className=\"mt-3 space-y-3 mb-4\">\n              <RadioGroup.Root\n                name=\"authFactorType\"\n                defaultValue=\"totp\"\n                aria-label=\"Select authentication factor type\"\n              >\n                <div className=\"flex space-x-3 items-start mb-5\">\n                  <div>\n                    <RadioGroup.Item\n                      className=\"block h-4 w-4 mt-2.5 bg-gray-200 rounded-full shadow-sm focus:outline-none focus:ring-0 focus:ring-offset-0 focus-visible:ring focus-visible:ring-indigo-500 focus-visible:ring-opacity-75 focus-visible:ring-offset-2 checked:bg-red-500\"\n                      value=\"totp\"\n                      id=\"totp\"\n                    >\n                      <RadioGroup.Indicator className=\"relative flex items-center justify-center\">\n                        <div className=\"bg-indigo-600 w-2 h-2 rounded-full\"></div>\n                      </RadioGroup.Indicator>\n                    </RadioGroup.Item>\n                  </div>\n                  <label htmlFor=\"totp\">\n                    <div className=\"flex items-center space-x-2 mb-2\">\n                      <div className=\"bg-indigo-500 rounded-full p-2\">\n                        <svg\n                          className=\"w-5 h-5\"\n                          fill=\"white\"\n                          viewBox=\"0 0 20 20\"\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                        >\n                          <path\n                            fillRule=\"evenodd\"\n                            d=\"M7 2a2 2 0 00-2 2v12a2 2 0 002 2h6a2 2 0 002-2V4a2 2 0 00-2-2H7zm3 14a1 1 0 100-2 1 1 0 000 2z\"\n                            clipRule=\"evenodd\"\n                          />\n                        </svg>\n                      </div>\n                      <p className=\"text-lg\">Set up using an app</p>\n                    </div>\n                    <p>\n                      Use an application on your phone to get an authentication\n                      code when prompted. We recommend using cloud-based TOTP\n                      apps such as:{' '}\n                      <a\n                        className=\"text-indigo-500 hover:underline\"\n                        href=\"https://1passwword.com\"\n                      >\n                        1Password\n                      </a>{' '}\n                      ,{' '}\n                      <a\n                        className=\"text-indigo-500 hover:underline\"\n                        href=\"https://authy.com/\"\n                      >\n                        Authy\n                      </a>\n                      ,{' '}\n                      <a\n                        className=\"text-indigo-500 hover:underline\"\n                        href=\"https://www.lastpass.com/\"\n                      >\n                        LastPass\n                      </a>\n                      , or{' '}\n                      <a\n                        className=\"text-indigo-500 hover:underline\"\n                        href=\"https://www.microsoft.com/en-us/security/mobile-authenticator-app\"\n                      >\n                        Microsoft Authenticator.\n                      </a>\n                    </p>\n                  </label>\n                </div>\n                <div className=\"flex space-x-3 items-start\">\n                  <RadioGroup.Item\n                    className=\"h-4 w-4 mt-2.5 bg-gray-200 rounded-full shadow-sm focus:outline-none focus:ring-0 focus:ring-offset-0 focus-visible:ring focus-visible:ring-indigo-500 focus-visible:ring-opacity-75 focus-visible:ring-offset-2 checked:bg-red-500\"\n                    value=\"sms\"\n                    id=\"sms\"\n                  >\n                    <RadioGroup.Indicator className=\"relative flex items-center justify-center \">\n                      <div className=\"bg-indigo-600 w-2 h-2 rounded-full\"></div>\n                    </RadioGroup.Indicator>\n                  </RadioGroup.Item>\n                  <label htmlFor=\"sms\">\n                    <div className=\"flex items-center space-x-2 mb-2\">\n                      <div className=\"bg-indigo-500 rounded-full p-2\">\n                        <svg\n                          className=\"w-5 h-5\"\n                          fill=\"white\"\n                          viewBox=\"0 0 20 20\"\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                        >\n                          <path\n                            fillRule=\"evenodd\"\n                            d=\"M18 13V5a2 2 0 00-2-2H4a2 2 0 00-2 2v8a2 2 0 002 2h3l3 3 3-3h3a2 2 0 002-2zM5 7a1 1 0 011-1h8a1 1 0 110 2H6a1 1 0 01-1-1zm1 3a1 1 0 100 2h3a1 1 0 100-2H6z\"\n                            clipRule=\"evenodd\"\n                          />\n                        </svg>\n                      </div>\n                      <p className=\"text-lg\">Set up using SMS</p>\n                    </div>\n                    <p>\n                      We will send you an SMS with an authentication code when\n                      prompted.\n                    </p>\n                  </label>\n                </div>\n              </RadioGroup.Root>\n              <p className=\"text-red-500\">{actionData?.errors?.message}</p>\n              <button\n                className=\"inline-flex items-center px-4 py-3 border border-transparent shadow-sm text-sm leading-4 font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                name=\"_action\"\n                value=\"selectFactor\"\n                type=\"submit\"\n              >\n                Continue{' '}\n                {transition.state === 'submitting' &&\n                  transition.submission.formData.get('_action') ===\n                    'selectFactor' && <Loader width={4} height={4} />}\n              </button>\n            </Form>\n          </>\n        )}\n      </li>\n    </div>\n  );\n};\n", "interface LoaderProps {\n  width: number;\n  height: number;\n}\nexport const Loader = ({ width, height }: LoaderProps) => {\n  return (\n    <svg\n      role=\"status\"\n      className={`ml-2 w-${width} h-${height} text-gray-200 animate-spin fill-indigo-600`}\n      viewBox=\"0 0 100 101\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z\"\n        fill=\"currentFill\"\n      />\n    </svg>\n  );\n};\n", "import { Form } from '@remix-run/react';\nimport VerificationInput from 'react-verification-input';\nimport { Loader } from '../../shared/loader';\n\nexport const Verify = ({ actionData, transition }) => {\n  console.log(actionData);\n  return (\n    <div>\n      <li\n        className={`ml-6 my-5 ${\n          actionData?.step === 1\n            ? 'p-5 border-2 border-gray-200 rounded-md'\n            : ''\n        }`}\n      >\n        {actionData?.step === 1 ? (\n          <>\n            {actionData?.totpFactor && (\n              <>\n                <div className=\"text-lg font-medium flex items-center mb-3\">\n                  <span className=\"flex absolute -left-4 justify-center items-center w-5 p-3.5 h-5 bg-indigo-500  rounded-full ring-8 ring-white text-base font-medium text-white\">\n                    2\n                  </span>\n                  <h2> Authentication verification</h2>\n                </div>\n                <p>\n                  Scan the image below with the Multi-factor authentication app\n                  on your phone. If you can't use a QR code, you can enter this\n                  text code instead\n                </p>\n                <div className=\"rounded-lg shadow-lg bg-white my-5 w-52 h-52 p-5\">\n                  <img\n                    src={actionData?.totpFactor?.totp.qr_code}\n                    alt=\"QR code\"\n                    className=\"w-52\"\n                  />\n                </div>\n                <p>\n                  After scanning the QR code image, the app will display a code\n                  that you can enter below.\n                </p>\n                <Form method=\"post\">\n                  <div className=\"max-w-xs mt-5 mb-10\">\n                    <VerificationInput\n                      autoFocus\n                      placeholder=\" \"\n                      removeDefaultStyles\n                      classNames={{\n                        container: 'container',\n                        character: 'character',\n                        characterInactive: 'character--inactive',\n                        characterSelected: 'character--selected',\n                      }}\n                      inputProps={{\n                        name: 'authenticationCode',\n                      }}\n                    />\n                  </div>\n                  <input\n                    type=\"hidden\"\n                    name=\"authenticationChallengeId\"\n                    value={actionData?.totpChallenge?.id}\n                  />\n                  <button\n                    className=\"inline-flex items-center px-4 py-3 border border-transparent shadow-sm text-sm leading-4 font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                    name=\"_action\"\n                    value=\"verify\"\n                    type=\"submit\"\n                  >\n                    Verify{' '}\n                    {transition.state === 'submitting' &&\n                      transition.submission.formData.get('_action') ===\n                        'verify' && <Loader width={4} height={4} />}\n                  </button>\n                </Form>\n              </>\n            )}\n\n            {actionData?.smsFactor && (\n              <div className=\"space-y-3\">\n                <div className=\"text-lg font-medium flex items-center mb-3\">\n                  <span className=\"flex absolute -left-4 justify-center items-center w-5 p-3.5 h-5 bg-indigo-500  rounded-full ring-8 ring-white text-base font-medium text-white\">\n                    2\n                  </span>\n                  <h2> Authentication verification</h2>\n                </div>\n                <p>\n                  We will send authentication codes to your mobile phone during\n                  sign in.\n                </p>\n\n                <Form method=\"post\">\n                  <fieldset>\n                    <label\n                      htmlFor=\"phoneNumber\"\n                      className=\"text-xs font-medium text-gray-700\"\n                    >\n                      Phone number\n                    </label>\n                    <input\n                      id=\"phoneNumber\"\n                      type=\"text\"\n                      name=\"phoneNumber\"\n                      placeholder=\"(+20) 1005321184\"\n                      className=\"focus:outline-none focus-visible:ring focus-visible:ring-indigo-500 focus-visible:ring-opacity-75 border border-gray-400 focus-visible:border-transparent mt-1 block max-w-sm rounded-md text-sm text-gray-700 placeholder:text-gray-500 p-1 my-3\"\n                    />\n                  </fieldset>\n\n                  <button\n                    className=\"inline-flex items-center px-4 py-3 border border-transparent shadow-sm text-sm leading-4 font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                    name=\"_action\"\n                    value=\"phoneNumber\"\n                    type=\"submit\"\n                  >\n                    Send authentication code{' '}\n                    {transition.state === 'submitting' &&\n                      transition.submission.formData.get('_action') ===\n                        'phoneNumber' && <Loader width={4} height={4} />}\n                  </button>\n                </Form>\n\n                <Form method=\"post\">\n                  <div className=\"max-w-xs mt-5 mb-10\">\n                    <VerificationInput\n                      placeholder=\" \"\n                      autoFocus\n                      removeDefaultStyles\n                      classNames={{\n                        container: 'container',\n                        character: 'character',\n                        characterInactive: 'character--inactive',\n                        characterSelected: 'character--selected',\n                      }}\n                      inputProps={{\n                        name: 'authenticationCode',\n                      }}\n                    />\n                  </div>\n                  <input\n                    type=\"hidden\"\n                    name=\"authenticationChallengeId\"\n                    value={actionData?.smsChallenge?.id}\n                  />\n                  <input\n                    type=\"hidden\"\n                    name=\"isSMSVerification\"\n                    value={'true'}\n                  />\n                  <button\n                    className=\"inline-flex items-center px-4 py-3 border border-transparent shadow-sm text-sm leading-4 font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                    name=\"_action\"\n                    value=\"verify\"\n                    type=\"submit\"\n                  >\n                    Verify{' '}\n                    {transition.state === 'submitting' &&\n                      transition.submission.formData.get('_action') ===\n                        'verify' && <Loader width={4} height={4} />}\n                  </button>\n                </Form>\n              </div>\n            )}\n          </>\n        ) : (\n          <div className=\"text-lg font-medium flex items-center mb-3\">\n            {actionData?.step > 1 ? (\n              <span className=\"flex absolute bg-indigo-500 -left-4 justify-center items-center w-7 h-7 rounded-full\">\n                <svg\n                  className=\"w-4 h-4 stroke-white\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={4}\n                    d=\"M5 13l4 4L19 7\"\n                  />\n                </svg>\n              </span>\n            ) : (\n              <span className=\"flex absolute  -left-4 justify-center items-center w-5 p-3.5 h-5 bg-indigo-500  rounded-full ring-8 ring-white text-base font-medium text-white\">\n                2\n              </span>\n            )}\n\n            <h2>Authentication verification</h2>\n          </div>\n        )}\n      </li>\n    </div>\n  );\n};\n", "export const Activated = ({ actionData }) => {\n  return (\n    <div className=\"flex\">\n      {actionData?.step === 2 && (\n        <div className=\"border-l-2 border-white  h-28 absolute -left-0.5 -bottom-3 z-10\"></div>\n      )}\n      <li\n        className={`ml-6 ${\n          actionData?.step === 2\n            ? 'p-5 border-2 border-green-100 rounded-md bg-green-50'\n            : ''\n        }`}\n      >\n        {actionData?.step === 2 ? (\n          <>\n            <div className=\"flex items-center\">\n              <span className=\"flex absolute bg-indigo-500 -left-4 justify-center items-center w-7 h-7 rounded-full\">\n                <svg\n                  className=\"w-4 h-4 stroke-white\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={4}\n                    d=\"M5 13l4 4L19 7\"\n                  />\n                </svg>\n              </span>\n              <h2 className=\"text-lg font-medium\">\n                Two-factor authentication activated\n              </h2>\n            </div>\n            <p className=\"mb-5 mt-3 text-base\">\n              You have successfully added a second authentication factor for\n              your account. You'll be prompted to use it the next time you log\n              in\n            </p>\n          </>\n        ) : (\n          <div className=\"flex\">\n            <div className=\"border-l-2 border-white h-6 absolute -left-0.5 -bottom-3\"></div>\n            <div className=\"text-lg font-medium flex items-center mb-3\">\n              <span className=\"flex absolute bg-indigo-500 -left-4 justify-center items-center w-7 h-7 rounded-full text-white font-medium \">\n                3\n              </span>\n              <h2>Two-factor authentication activated</h2>\n            </div>\n          </div>\n        )}\n      </li>\n    </div>\n  );\n};\n", "import { ExclamationCircleIcon } from '@heroicons/react/outline';\n\ninterface WarningProps {\n  message: string;\n}\nexport const Warning = ({ message }: WarningProps) => {\n  return (\n    <div className=\"bg-yellow-50 border-l-4 border-yellow-400 p-4 my-5\">\n      <div className=\"flex items-center\">\n        <div className=\"flex-shrink-0\">\n          <ExclamationCircleIcon\n            className=\"h-6 w-6 text-yellow-500\"\n            aria-hidden=\"true\"\n          />\n        </div>\n        <div className=\"ml-3\">\n          <p className=\"text-sm text-yellow-700\">{message}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n", "import type { ActionFunction, LoaderFunction } from '@remix-run/node';\nimport { redirect } from '@remix-run/node';\nimport { Form, useLoaderData } from '@remix-run/react';\nimport { getUserAuthFactors } from '~/models/user.server';\nimport { requireUserId } from '~/utils/session.server';\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const userId = await requireUserId(request);\n  const userAuthFactors = await getUserAuthFactors(userId);\n  return userAuthFactors;\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  return redirect('/settings/two-factor-authentication');\n};\n\nexport default function Settings() {\n  const data = useLoaderData();\n\n  return (\n    <div>\n      <h1 className=\"text-3xl font-medium\">Settings</h1>\n      <div className=\"my-5\">\n        <h3 className=\"text-2xl leading-6 font-medium text-gray-900 mb-3\">\n          Two-factor authentication\n        </h3>\n        <p className=\"mb-3\">\n          Two-factor authentication (2FA) is an extra layer of security used\n          when logging into websites or apps.\n        </p>\n        <div className=\"bg-white shadow overflow-hidden sm:rounded-lg\">\n          <div className=\"px-4 py-5 sm:px-6\">\n            <p className=\"mt-1 max-w-2xl text-sm text-gray-500\">\n              Two-factor methods\n            </p>\n          </div>\n          <div className=\"border-t border-gray-200 px-4 py-5 sm:p-0\">\n            <dl className=\"sm:divide-y sm:divide-gray-200\">\n              <div className=\"items-center py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                <dt className=\"text-sm font-medium text-gray-500\">\n                  Authenticator app\n                </dt>\n                <dd className=\"mt-1 text-right text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n                  <Form method=\"post\">\n                    <span className=\"mr-5 text-gray-500\">\n                      {data?.totpFactorId ? 'Configured' : 'Not configured'}\n                    </span>\n\n                    <button\n                      type=\"submit\"\n                      className=\"px-4 py-3 border border-transparent shadow-sm text-sm leading-4 rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                    >\n                      {data?.totpFactorId ? 'Edit' : 'Add'}\n                    </button>\n                  </Form>\n                </dd>\n              </div>\n              <div className=\"py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                <dt className=\"text-sm  font-medium text-gray-500\">SMS</dt>\n                <dd className=\"mt-1 text-right text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n                  <Form method=\"post\">\n                    <span className=\"mr-5 text-gray-500\">\n                      {data?.smsFactorId ? 'Configured' : 'Not configured'}\n                    </span>\n                    <button\n                      type=\"submit\"\n                      className=\"px-4 py-3 border border-transparent shadow-sm text-sm leading-4 rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                    >\n                      {data?.smsFactorId ? 'Edit' : 'Add'}\n                    </button>\n                  </Form>\n                </dd>\n              </div>\n            </dl>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import type { ActionFunction, LoaderFunction } from '@remix-run/node';\nimport { redirect } from '@remix-run/node';\nimport { logout } from '~/utils/session.server';\n\nexport const action: ActionFunction = async ({ request }) => {\n  return logout(request);\n};\n\nexport const loader: LoaderFunction = async () => {\n  return redirect('/');\n};\n", "import type {\n  ActionFunction,\n  LoaderFunction,\n  MetaFunction,\n} from '@remix-run/node';\nimport { json, redirect } from '@remix-run/node';\nimport { Form, Link, useActionData, useSearchParams } from '@remix-run/react';\nimport * as React from 'react';\nimport { getUserId, createUserSession } from '~/utils/session.server';\nimport { createUser, getUserByEmail } from '~/models/user.server';\nimport { safeRedirect, validateEmail } from '~/utils';\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const userId = await getUserId(request);\n  if (userId) return redirect('/');\n  return json({});\n};\n\ninterface ActionData {\n  errors: {\n    email?: string;\n    password?: string;\n  };\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const email = formData.get('email');\n  const password = formData.get('password');\n  const redirectTo = safeRedirect(formData.get('redirectTo'), '/');\n\n  if (!validateEmail(email)) {\n    return json<ActionData>(\n      { errors: { email: 'Email is invalid' } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof password !== 'string') {\n    return json<ActionData>(\n      { errors: { password: 'Password is required' } },\n      { status: 400 }\n    );\n  }\n\n  if (password.length < 8) {\n    return json<ActionData>(\n      { errors: { password: 'Password is too short' } },\n      { status: 400 }\n    );\n  }\n\n  const existingUser = await getUserByEmail(email);\n  if (existingUser) {\n    return json<ActionData>(\n      { errors: { email: 'A user already exists with this email' } },\n      { status: 400 }\n    );\n  }\n\n  const user = await createUser(email, password);\n\n  return createUserSession({\n    request,\n    userId: user.id,\n    remember: false,\n    redirectTo,\n  });\n};\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: 'Sign Up',\n  };\n};\n\nexport default function Join() {\n  const [searchParams] = useSearchParams();\n  const redirectTo = searchParams.get('redirectTo') ?? undefined;\n  const actionData = useActionData() as ActionData;\n  const emailRef = React.useRef<HTMLInputElement>(null);\n  const passwordRef = React.useRef<HTMLInputElement>(null);\n\n  React.useEffect(() => {\n    if (actionData?.errors?.email) {\n      emailRef.current?.focus();\n    } else if (actionData?.errors?.password) {\n      passwordRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <div className=\"flex min-h-full flex-col justify-center\">\n      <div className=\"mx-auto w-full max-w-md px-8  my-20\">\n        <h1 className=\"text-4xl text-center text-gray-800 font-medium mb-10\">\n          Sign up\n        </h1>\n        <Form method=\"post\" className=\"space-y-6\">\n          <div>\n            <label\n              htmlFor=\"email\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Email address\n            </label>\n            <div className=\"mt-1\">\n              <input\n                ref={emailRef}\n                id=\"email\"\n                required\n                autoFocus={true}\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                aria-invalid={actionData?.errors?.email ? true : undefined}\n                aria-describedby=\"email-error\"\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n              />\n              {actionData?.errors?.email && (\n                <div className=\"pt-1 text-red-700\" id=\"email-error\">\n                  {actionData.errors.email}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div>\n            <label\n              htmlFor=\"password\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Password\n            </label>\n            <div className=\"mt-1\">\n              <input\n                id=\"password\"\n                ref={passwordRef}\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"new-password\"\n                aria-invalid={actionData?.errors?.password ? true : undefined}\n                aria-describedby=\"password-error\"\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n              />\n              {actionData?.errors?.password && (\n                <div className=\"pt-1 text-red-700\" id=\"password-error\">\n                  {actionData.errors.password}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n          <button\n            type=\"submit\"\n            className=\"w-full rounded bg-indigo-500  py-2 px-4 text-white hover:bg-indigo-600 focus:bg-indigo-400\"\n          >\n            Create Account\n          </button>\n          <div className=\"flex items-center justify-center\">\n            <div className=\"text-center text-sm text-gray-500\">\n              Already have an account?{' '}\n              <Link\n                className=\"text-indigo-500 underline\"\n                to={{\n                  pathname: '/login',\n                  search: searchParams.toString(),\n                }}\n              >\n                Log in\n              </Link>\n            </div>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n", "import { Link } from '@remix-run/react';\nimport { useOptionalUser } from '~/utils';\n\nexport default function Index() {\n  const user = useOptionalUser();\n  return (\n    <main className=\"relative min-h-screen bg-white \">\n      {user ? (\n        <Link\n          to=\"/settings\"\n          className=\"max-w-sm mx-auto mt-40 flex items-center justify-center rounded-md border border-transparent bg-white px-4 py-3 text-base font-medium text-indigo-700 shadow-md hover:bg-indigo-50 sm:px-8\"\n        >\n          Settings\n        </Link>\n      ) : (\n        <div>\n          <p className=\"text-xl text-center mt-40\">\n            Remix app that has user auth + 2FA.\n          </p>\n          <div className=\"mx-auto mt-10 max-w-sm sm:flex sm:max-w-none\">\n            {user ? (\n              <Link\n                to=\"/settings\"\n                className=\"flex items-center justify-center rounded-md border border-transparent bg-white px-4 py-3 text-base font-medium text-indigo-700 shadow-md hover:bg-indigo-50 sm:px-8\"\n              >\n                Settings\n              </Link>\n            ) : (\n              <div className=\"space-y-4 sm:mx-auto sm:inline-grid sm:grid-cols-2 sm:gap-5 sm:space-y-0\">\n                <Link\n                  to=\"/signup\"\n                  className=\"flex items-center justify-center rounded-md border border-transparent bg-white px-4 py-3 text-base font-medium text-indigo-700 shadow-md hover:bg-indigo-50 sm:px-8\"\n                >\n                  Sign up\n                </Link>\n                <Link\n                  to=\"/login\"\n                  className=\"flex items-center justify-center rounded-md bg-indigo-500 px-4 py-3 font-medium text-white hover:bg-indigo-600  \"\n                >\n                  Log In\n                </Link>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </main>\n  );\n}\n", "import type {\n  ActionFunction,\n  LoaderFunction,\n  MetaFunction,\n} from '@remix-run/node';\nimport { json, redirect } from '@remix-run/node';\nimport {\n  useActionData,\n  useSearchParams,\n  useTransition,\n} from '@remix-run/react';\nimport { createUserSession, getUserId } from '~/utils/session.server';\nimport { verifyLogin } from '~/models/user.server';\nimport { safeRedirect, validateEmail } from '~/utils';\nimport { workos } from '~/utils/workos.server';\nimport { LoginForm } from '~/components/login-form';\nimport { TOTPForm } from '~/components/mfa/totp-form';\nimport { SMSForm } from '~/components/mfa/sms-form';\nimport { FormSwitcher } from '~/components/mfa/form-switcher';\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const userId = await getUserId(request);\n  if (userId) return redirect('/');\n  return null;\n};\ninterface ActionData {\n  errors?: {\n    email?: string;\n    password?: string;\n  };\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const redirectTo = safeRedirect(formData.get('redirectTo'), '/');\n  const remember = formData.get('remember');\n  const { _action, ...values } = Object.fromEntries(formData);\n\n  switch (_action) {\n    case 'login':\n      const email = formData.get('email');\n\n      if (!validateEmail(email)) {\n        return json<ActionData>(\n          { errors: { email: 'Email is invalid' } },\n          { status: 400 }\n        );\n      }\n\n      const password = formData.get('password');\n\n      if (typeof password !== 'string') {\n        return json<ActionData>(\n          { errors: { password: 'Password is required' } },\n          { status: 400 }\n        );\n      }\n\n      if (password.length < 8) {\n        return json<ActionData>(\n          { errors: { password: 'Password is too short' } },\n          { status: 400 }\n        );\n      }\n\n      const user = await verifyLogin(email, password);\n      if (!user) {\n        return json<ActionData>(\n          { errors: { email: 'Invalid email or password' } },\n          { status: 400 }\n        );\n      }\n\n      // user doesn't have 2FA enabled\n      if (!user.totpFactorId && !user.smsFactorId) {\n        return createUserSession({\n          request,\n          userId: user.id,\n          remember: remember === 'on' ? true : false,\n          redirectTo,\n        });\n      }\n\n      // User has TOTP\n      if (user.totpFactorId && !user.smsFactorId) {\n        const totpChallenge = await workos.mfa.challengeFactor({\n          authenticationFactorId: `${user.totpFactorId}`,\n        });\n\n        return {\n          userId: user.id,\n          totpChallengeId: user.totpFactorId && totpChallenge.id,\n          secondFactor: true,\n          totp: true,\n        };\n      }\n\n      // user has SMS\n      if (!user.totpFactorId && user.smsFactorId) {\n        const smsChallenge = await workos.mfa.challengeFactor({\n          authenticationFactorId: `${user.smsFactorId}`,\n        });\n\n        return {\n          userId: user.id,\n          smsChallengeId: user.smsFactorId && smsChallenge.id,\n          secondFactor: true,\n          sms: true,\n        };\n      }\n\n      // user has both\n      if (user.totpFactorId && user.smsFactorId) {\n        const totpChallenge = await workos.mfa.challengeFactor({\n          authenticationFactorId: `${user.totpFactorId}`,\n        });\n\n        return {\n          userId: user.id,\n          bothAuthFactors: true,\n          secondFactor: true,\n          totpChallengeId: totpChallenge.id,\n          totpFactorId: user.totpFactorId,\n          smsFactorId: user.smsFactorId,\n        };\n      }\n\n    case 'SMS':\n      const { smsFactorId } = values;\n      const smsChallenge = await workos.mfa.challengeFactor({\n        authenticationFactorId: `${smsFactorId}`,\n      });\n\n      return {\n        bothAuthFactors: true,\n        smsChallengeId: smsChallenge.id,\n        secondFactor: true,\n      };\n\n    case 'verify':\n      const { authenticationCode, authenticationChallengeId, userId } = values;\n\n      console.log({ authenticationCode, authenticationChallengeId, userId });\n      const response = await workos.mfa.verifyFactor({\n        authenticationChallengeId: `${authenticationChallengeId}`,\n        code: `${authenticationCode}`,\n      });\n\n      if (!response.valid) {\n        return json(\n          {\n            errors: {\n              authCode: `Something went wrong. Please try again`,\n            },\n            secondFactor: true,\n          },\n          { status: 400 }\n        );\n      }\n\n      return createUserSession({\n        request,\n        userId: `${userId}`,\n        remember: remember === 'on' ? true : false,\n        redirectTo,\n      });\n  }\n};\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: 'Login',\n  };\n};\n\nexport default function LoginPage() {\n  const [searchParams] = useSearchParams();\n  const redirectTo = searchParams.get('redirectTo') || '/';\n  const actionData = useActionData();\n  const transition = useTransition();\n\n  return (\n    <div className=\"flex min-h-full flex-col justify-center\">\n      <div className=\"mx-auto w-full max-w-md px-8 my-20\">\n        <h1 className=\"text-4xl text-center text-gray-800 font-medium mb-10\">\n          Log in\n        </h1>\n        {!actionData?.secondFactor && (\n          <LoginForm\n            actionData={actionData}\n            redirectTo={redirectTo}\n            searchParams={searchParams}\n          />\n        )}\n        {actionData?.secondFactor && actionData?.totp && (\n          <TOTPForm actionData={actionData} transition={transition} />\n        )}\n        {actionData?.secondFactor && actionData?.sms && (\n          <SMSForm actionData={actionData} transition={transition} />\n        )}\n        {actionData?.secondFactor && actionData?.bothAuthFactors && (\n          <FormSwitcher actionData={actionData} transition={transition} />\n        )}\n      </div>\n    </div>\n  );\n}\n", "import { Form, Link } from '@remix-run/react';\n\nexport const LoginForm = ({ actionData, redirectTo, searchParams }) => {\n  return (\n    <Form method=\"post\" className=\"space-y-6\">\n      <div>\n        <label\n          htmlFor=\"email\"\n          className=\"block text-sm font-medium text-gray-700\"\n        >\n          Email address\n        </label>\n        <div className=\"mt-1\">\n          <input\n            id=\"email\"\n            required\n            autoFocus={true}\n            name=\"email\"\n            type=\"email\"\n            autoComplete=\"email\"\n            aria-invalid={actionData?.errors?.email ? true : undefined}\n            aria-describedby=\"email-error\"\n            className=\"focus:outline-none focus-visible:ring focus-visible:ring-indigo-500 focus-visible:ring-opacity-75 border border-gray-400 focus-visible:border-transparent mt-1 block w-full rounded-md text-sm text-gray-700 placeholder:text-gray-500 p-3\"\n          />\n          {actionData?.errors?.email && (\n            <div className=\"pt-1 text-red-700\" id=\"email-error\">\n              {actionData.errors.email}\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div>\n        <label\n          htmlFor=\"password\"\n          className=\"block text-sm font-medium text-gray-700\"\n        >\n          Password\n        </label>\n        <div className=\"mt-1\">\n          <input\n            id=\"password\"\n            name=\"password\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n            aria-invalid={actionData?.errors?.password ? true : undefined}\n            aria-describedby=\"password-error\"\n            className=\"focus:outline-none focus-visible:ring focus-visible:ring-indigo-500 focus-visible:ring-opacity-75 border border-gray-400 focus-visible:border-transparent mt-1 block w-full rounded-md text-sm text-gray-700 placeholder:text-gray-500 p-3\"\n          />\n          {actionData?.errors?.password && (\n            <div className=\"pt-1 text-red-700\" id=\"password-error\">\n              {actionData.errors.password}\n            </div>\n          )}\n        </div>\n      </div>\n\n      <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n      <button\n        name=\"_action\"\n        value=\"login\"\n        type=\"submit\"\n        className=\"w-full rounded bg-indigo-500  py-2 px-4 text-white hover:bg-indigo-600 focus:bg-indigo-400\"\n      >\n        Log in\n      </button>\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center\">\n          <input\n            id=\"remember\"\n            name=\"remember\"\n            type=\"checkbox\"\n            className=\"h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500\"\n          />\n          <label\n            htmlFor=\"remember\"\n            className=\"ml-2 block text-sm text-gray-900\"\n          >\n            Remember me\n          </label>\n        </div>\n        <div className=\"text-center text-sm text-gray-500\">\n          Don't have an account?{' '}\n          <Link\n            className=\"text-indigo-500 underline\"\n            to={{\n              pathname: '/signup',\n              search: searchParams.toString(),\n            }}\n          >\n            Sign up\n          </Link>\n        </div>\n      </div>\n    </Form>\n  );\n};\n", "import { Form } from '@remix-run/react';\nimport VerificationInput from 'react-verification-input';\nimport { Loader } from '../shared/loader';\n\nexport const TOTPForm = ({ actionData, transition }) => {\n  return (\n    <Form method=\"post\">\n      <h3 className=\"text-xl mb-3 font-medium\">Authenticator app</h3>\n      <p>Use the code that is generated by your authenticator app</p>{' '}\n      <div className=\"max-w-xs mt-5 mb-10 \">\n        <label\n          htmlFor=\"authenticationCode\"\n          className=\"block text-sm font-medium text-gray-700 mb-5\"\n        >\n          Passcode\n        </label>\n        <VerificationInput\n          autoFocus\n          placeholder=\" \"\n          removeDefaultStyles\n          classNames={{\n            container: 'container',\n            character: 'character',\n            characterInactive: 'character--inactive',\n            characterSelected: 'character--selected',\n          }}\n          inputProps={{\n            name: 'authenticationCode',\n            id: 'authenticationCode',\n          }}\n        />\n      </div>\n      <input\n        type=\"hidden\"\n        name=\"authenticationChallengeId\"\n        value={actionData?.totpChallengeId}\n      />\n      <input type=\"hidden\" name=\"userId\" value={actionData?.userId} />\n      {actionData?.errors?.authCode && (\n        <div className=\"pt-1 my-4 text-red-700\" id=\"password-error\">\n          {actionData.errors.authCode}\n        </div>\n      )}\n      <button\n        className=\"inline-flex items-center px-4 py-3 border border-transparent shadow-sm text-sm leading-4 font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n        name=\"_action\"\n        value=\"verify\"\n        type=\"submit\"\n      >\n        Verify{' '}\n        {transition.state === 'submitting' &&\n          transition.submission.formData.get('_action') === 'verify' && (\n            <Loader width={4} height={4} />\n          )}\n      </button>\n    </Form>\n  );\n};\n", "import { Form } from '@remix-run/react';\nimport VerificationInput from 'react-verification-input';\nimport { Loader } from '../shared/loader';\n\nexport const SMSForm = ({ actionData, transition }) => {\n  return (\n    <div>\n      <Form method=\"post\">\n        SMS Verification code\n        <div className=\"max-w-xs mt-5 mb-10 p-5 rounded-md shadow-md bg-gray-200\">\n          <VerificationInput\n            autoFocus\n            placeholder=\" \"\n            removeDefaultStyles\n            classNames={{\n              container: 'container',\n              character: 'character',\n              characterInactive: 'character--inactive',\n              characterSelected: 'character--selected',\n            }}\n            inputProps={{\n              name: 'authenticationCode',\n            }}\n          />\n        </div>\n        <input\n          type=\"hidden\"\n          name=\"authenticationChallengeId\"\n          value={actionData?.smsChallengeId}\n        />\n        <input type=\"hidden\" name=\"userId\" value={actionData?.userId} />\n        <button\n          className=\"inline-flex items-center px-4 py-3 border border-transparent shadow-sm text-sm leading-4 font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n          name=\"_action\"\n          value=\"verify\"\n          type=\"submit\"\n        >\n          Verify{' '}\n          {transition.state === 'submitting' &&\n            transition.submission.formData.get('_action') === 'verify' && (\n              <Loader width={4} height={4} />\n            )}\n        </button>\n      </Form>\n    </div>\n  );\n};\n", "import { Form } from '@remix-run/react';\nimport { useState } from 'react';\nimport VerificationInput from 'react-verification-input';\nimport { Loader } from '../shared/loader';\n\nexport const FormSwitcher = ({ actionData, transition }) => {\n  const [activeForm, setActiveForm] = useState(0);\n\n  return (\n    <div>\n      <h2 className=\"text-2xl font-medium mb-5\">\n        Second Factor authentication\n      </h2>\n      <>\n        {activeForm === 0 && (\n          <Form method=\"post\">\n            <h3 className=\"text-xl mb-3 font-medium\">Authenticator app</h3>\n            <p>Use the code that is generated by your authenticator app</p>\n            <div className=\"max-w-xs mt-5 mb-10 \">\n              <label\n                htmlFor=\"authenticationCode\"\n                className=\"block text-sm font-medium text-gray-700 mb-5\"\n              >\n                Passcode\n              </label>\n              <VerificationInput\n                autoFocus\n                placeholder=\" \"\n                removeDefaultStyles\n                classNames={{\n                  container: 'container',\n                  character: 'character',\n                  characterInactive: 'character--inactive',\n                  characterSelected: 'character--selected',\n                }}\n                inputProps={{\n                  name: 'authenticationCode',\n                }}\n              />\n            </div>\n            <input\n              type=\"hidden\"\n              name=\"authenticationChallengeId\"\n              value={actionData?.totpChallengeId}\n            />\n            <input type=\"hidden\" name=\"userId\" value={actionData?.userId} />\n            {actionData?.errors?.authCode && (\n              <div className=\"pt-1 my-4 text-red-700\" id=\"password-error\">\n                {actionData.errors.authCode}\n              </div>\n            )}\n            <button\n              className=\"inline-flex items-center px-4 py-3 border border-transparent shadow-sm text-sm leading-4 font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n              name=\"_action\"\n              value=\"verify\"\n              type=\"submit\"\n            >\n              Verify{' '}\n              {transition.state === 'submitting' &&\n                transition.submission.formData.get('_action') === 'verify' && (\n                  <Loader width={4} height={4} />\n                )}\n            </button>\n            <button\n              className=\"block text-gray-700 font-medium my-5 underline\"\n              onClick={() => setActiveForm(1)}\n            >\n              Use SMS\n            </button>\n          </Form>\n        )}\n      </>\n      <>\n        {activeForm === 1 && (\n          <div>\n            <h3 className=\"text-xl mb-3 font-medium\">Text message</h3>\n            <p>\n              Use the code that is sent to your registered phone number\n            </p>{' '}\n            <Form method=\"post\">\n              <input\n                type=\"hidden\"\n                name=\"smsFactorId\"\n                value={actionData?.smsFactorId}\n              />\n              <button\n                className=\" my-5 inline-flex items-center px-4 py-3 border border-transparent shadow-sm text-sm leading-4 font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                name=\"_action\"\n                value=\"SMS\"\n                type=\"submit\"\n              >\n                Send authentication code{' '}\n                {transition.state === 'submitting' &&\n                  transition.submission.formData.get('_action') === 'SMS' && (\n                    <Loader width={4} height={4} />\n                  )}\n              </button>\n            </Form>\n            <Form method=\"post\">\n              <div className=\"max-w-xs mt-5 mb-10\">\n                <label\n                  htmlFor=\"email\"\n                  className=\"block text-sm font-medium text-gray-700 mb-5\"\n                >\n                  Passcode\n                </label>\n                <VerificationInput\n                  autoFocus\n                  placeholder=\" \"\n                  removeDefaultStyles\n                  classNames={{\n                    container: 'container',\n                    character: 'character',\n                    characterInactive: 'character--inactive',\n                    characterSelected: 'character--selected',\n                  }}\n                  inputProps={{\n                    name: 'authenticationCode',\n                  }}\n                />\n              </div>\n              <input type=\"hidden\" name=\"userId\" value={actionData?.userId} />\n              <input\n                type=\"hidden\"\n                name=\"authenticationChallengeId\"\n                value={actionData?.smsChallengeId}\n              />\n              <button\n                className=\"inline-flex items-center px-4 py-3 border border-transparent shadow-sm text-sm leading-4 font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                name=\"_action\"\n                value=\"verify\"\n                type=\"submit\"\n              >\n                Verify{' '}\n                {transition.state === 'submitting' &&\n                  transition.submission.formData.get('_action') ===\n                    'verify' && <Loader width={4} height={4} />}\n              </button>\n              <button\n                className=\"block text-gray-700 font-medium my-5 underline\"\n                onClick={() => setActiveForm(0)}\n              >\n                Use TOTP\n              </button>\n            </Form>\n          </div>\n        )}\n      </>\n    </div>\n  );\n};\n", "export default {'version':'f9e44673','entry':{'module':'/build/entry.client-RFIXHEYU.js','imports':['/build/_shared/chunk-SXNYENQH.js','/build/_shared/chunk-7CQM2EG4.js','/build/_shared/chunk-6BO74FWO.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-3IKX663X.js','imports':['/build/_shared/chunk-3CBFQP3S.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-ETPZZTEC.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-4ZRYN6KS.js','imports':['/build/_shared/chunk-Q3PBOCXQ.js','/build/_shared/chunk-SODL2DQU.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/logout-XZSFKSCK.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/settings':{'id':'routes/settings','parentId':'root','path':'settings','index':undefined,'caseSensitive':undefined,'module':'/build/routes/settings-ZUPZ4B4C.js','imports':['/build/_shared/chunk-SODL2DQU.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/settings.two-factor-authentication':{'id':'routes/settings.two-factor-authentication','parentId':'root','path':'settings/two-factor-authentication','index':undefined,'caseSensitive':undefined,'module':'/build/routes/settings.two-factor-authentication-FSV4KLKP.js','imports':['/build/_shared/chunk-Q3PBOCXQ.js','/build/_shared/chunk-SODL2DQU.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/signup':{'id':'routes/signup','parentId':'root','path':'signup','index':undefined,'caseSensitive':undefined,'module':'/build/routes/signup-4DUEEK7Y.js','imports':['/build/_shared/chunk-SODL2DQU.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-F9E44673.js'};", "\nimport * as entryServer from \"/Users/mahmoud/Desktop/TaskOS/app/entry.server.tsx\";\nimport * as route0 from \"/Users/mahmoud/Desktop/TaskOS/app/root.tsx\";\nimport * as route1 from \"/Users/mahmoud/Desktop/TaskOS/app/routes/settings.two-factor-authentication.tsx\";\nimport * as route2 from \"/Users/mahmoud/Desktop/TaskOS/app/routes/settings.tsx\";\nimport * as route3 from \"/Users/mahmoud/Desktop/TaskOS/app/routes/logout.tsx\";\nimport * as route4 from \"/Users/mahmoud/Desktop/TaskOS/app/routes/signup.tsx\";\nimport * as route5 from \"/Users/mahmoud/Desktop/TaskOS/app/routes/index.tsx\";\nimport * as route6 from \"/Users/mahmoud/Desktop/TaskOS/app/routes/login.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/settings.two-factor-authentication\": {\n      id: \"routes/settings.two-factor-authentication\",\n      parentId: \"root\",\n      path: \"settings/two-factor-authentication\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/settings\": {\n      id: \"routes/settings\",\n      parentId: \"root\",\n      path: \"settings\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/signup\": {\n      id: \"routes/signup\",\n      parentId: \"root\",\n      path: \"signup\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    }\n  };"],
  "mappings": "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",
  "names": []
}
